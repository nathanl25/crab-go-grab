name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Run Tests
        working-directory: ./crabgograb
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/test
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: root
        run: |
          mvn clean test -Dspring.profiles.active=test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build Backend
        working-directory: ./crabgograb
        run: mvn clean package -DskipTests

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Build Frontend
        working-directory: ./client
        run: |
          npm ci
          npm run build

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_SSH_KEY }}" > ~/.ssh/key.pem
          chmod 600 ~/.ssh/key.pem
          ssh-keyscan -H ${{ secrets.AWS_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy
        run: |
          scp -i ~/.ssh/key.pem -r crabgograb/target/*.jar ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }}:~/app/backend/
          scp -i ~/.ssh/key.pem -r client/dist/* ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }}:~/app/frontend/
          ssh -i ~/.ssh/key.pem ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }} 'bash ~/app/deploy.sh'
